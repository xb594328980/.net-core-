<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sansunt.MicroService.Demo.IdentityServer.Host</name>
    </assembly>
    <members>
        <member name="T:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController">
            <summary>
            父级控制器
            <remarks>create by xingbo 18/12/20</remarks>
            </summary>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.#ctor(MediatR.INotificationHandler{Sansunt.Domain.Core.Notifications.DomainNotification},Sansunt.Domain.Core.Bus.IMediatorHandler)">
            <summary>
            构造
            </summary>
            <param name="notifications"></param>
            <param name="mediator"></param>
        </member>
        <member name="P:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.Notifications">
            <summary>
            获取提醒
            </summary>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.IsValidOperation">
            <summary>
            是否有提醒
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.Response(System.Object)">
            <summary>
            返回信息
            </summary>
            <param name="result">结果</param>
            <returns></returns>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.ErrorResponse(Sansunt.MicroService.Demo.Infra.Enum.ErrorCodeEnum,System.String)">
            <summary>
            返回错信息
            </summary>
            <param name="errorCode">错误码</param>
            <param name="errorMsg">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.ErrorResponse(System.String)">
            <summary>
            返回错信息
            </summary>
            <param name="errorMsg">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.NotifyModelStateErrors">
            <summary>
            把验证错误引发错误通知
            </summary>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.NotifyError(System.String,System.String)">
            <summary>
            发布错误通知
            </summary>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.AddIdentityErrors(Microsoft.AspNetCore.Identity.IdentityResult)">
            <summary>
            把身份验证错误引发错误通知
            </summary>
            <param name="result"></param>
        </member>
        <member name="F:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController._log">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ApiController.GetLog">
            <summary>
            获取日志操作
            </summary>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Controllers.ValuesController.Get">
            <summary>
            示例
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sansunt.MicroService.Demo.IdentityServer.Host.Extensions.IdentityServerConfig">
            <summary>
            配置
            </summary>
        </member>
        <member name="T:Sansunt.MicroService.Demo.IdentityServer.Host.Extensions.ProfileService">
            <summary>
            验证
            </summary>
        </member>
        <member name="T:Sansunt.MicroService.Demo.IdentityServer.Host.Extensions.ResourceOwnerPasswordValidator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Extensions.ResourceOwnerPasswordValidator.#ctor(Sansunt.MicroService.Demo.Application.Interfaces.IStaffAppService)">
            <summary>
            
            </summary>
            <param name="staffAppService"></param>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Extensions.ResourceOwnerPasswordValidator.ValidateAsync(IdentityServer4.Validation.ResourceOwnerPasswordValidationContext)">
            <summary>
            验证
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Sansunt.MicroService.Demo.IdentityServer.Host.Startup">
            <summary>
            启动配置
            </summary>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
             <summary>
            This method gets called by the runtime.Use this method to add services to the container.
             </summary>
             <param name="services"></param>
             <returns></returns>
        </member>
        <member name="M:Sansunt.MicroService.Demo.IdentityServer.Host.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.AspNetCore.Hosting.IApplicationLifetime)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="lifetime"></param>
        </member>
        <member name="M:Host.Quickstart.Account.ExternalController.Challenge(System.String,System.String)">
            <summary>
            initiate roundtrip to external authentication provider
            </summary>
        </member>
        <member name="M:Host.Quickstart.Account.ExternalController.Callback">
            <summary>
            Post processing of external authentication
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.AccountController.Login(System.String)">
            <summary>
            Entry point into the login workflow
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.AccountController.Login(IdentityServer4.Quickstart.UI.LoginInputModel,System.String)">
            <summary>
            Handle postback from username/password login
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.AccountController.Logout(System.String)">
            <summary>
            Show logout page
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.AccountController.Logout(IdentityServer4.Quickstart.UI.LogoutInputModel)">
            <summary>
            Handle logout page postback
            </summary>
        </member>
        <member name="T:IdentityServer4.Quickstart.UI.ConsentController">
            <summary>
            This controller processes the consent UI
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.ConsentController.Index(System.String)">
            <summary>
            Shows the consent screen
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.ConsentController.Index(IdentityServer4.Quickstart.UI.ConsentInputModel)">
            <summary>
            Handles the consent screen postback
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.Extensions.IsPkceClientAsync(IdentityServer4.Stores.IClientStore,System.String)">
            <summary>
            Determines whether the client is configured to use PKCE.
            </summary>
            <param name="store">The store.</param>
            <param name="client_id">The client identifier.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityServer4.Quickstart.UI.GrantsController">
            <summary>
            This sample controller allows a user to revoke grants given to clients
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.GrantsController.Index">
            <summary>
            Show list of grants
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.GrantsController.Revoke(System.String)">
            <summary>
            Handle postback to revoke a client
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.HomeController.Error(System.String)">
            <summary>
            Shows the error page
            </summary>
        </member>
    </members>
</doc>
